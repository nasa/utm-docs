openapi: 3.0.0
info:
  title: ETM Operator API
  version: 0.1.3
  description: Endpoints for managing Operational Data with data models in reference of ASTM.

security:
  - Authority:
    - operations.non-sensitive.read
    - operations.non-sensitive.write
    - uvr.non-sensitive.read
    - uvr.non-sensitive.write

tags:
  - name: Operations
    description: Add and view Operations
  - name: Conflicts
    description: Get conflicting Operational Intents
  - name: Messages
    description: Add and view Operator Messages
  - name: Positions
    description: Add Operation Positions
  - name: Constraints for elevated privileges
    description: Add and view Constraints.  Constraints endpoints require elevated privileges

paths:
  "/messages":
    post:
      tags:
        - Messages
      summary: Submit Message for a GUFI
      security:
        - Authority:
          - operations.non-sensitive.write
      responses:
        "201":
          description: >-
            Acknowledge that request was received. This does not guarantee that the Message was successfully processed in the ESS network.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "400":
          description: Invalid Request was received.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Message"
        description: msg
        required: true

  "/messages/{gufi}":
    get:
      tags:
        - Messages
      summary: Get Messages by GUFI
      security:
        - Authority:
          - operations.non-sensitive.read
      parameters:
        - name: gufi
          in: path
          description: gufi
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Message"
        "400":
          description: Invalid Request was received.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "404":
          description: The Operation for the GUFI is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"

  "/operations":
    post:
      tags:
        - Operations
      summary: Propose a new Operation
      security:
        - Authority:
          - operations.non-sensitive.write
      description: >-
        If the requestBody doesn't contain a GUFI, a random GUFI shall be assigned to the
        Operation.
        If the requestBody contains a non-existing GUFI, then the supplied GUFI will be
        used for the new operation.
      responses:
        "201":
          description: >-
            Acknowledge that request was received. This does not guarantee that the Operation was successfully added to the ESS network.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponseWithConflicts"
        "400":
          description: Invalid Request was received.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProposeOperationParameters"
        description: Operational Plan
        required: true
    put:
      tags:
        - Operations
      summary: Update an Operation
      security:
        - Authority:
          - operations.non-sensitive.write
      description: >-
        Update an existing operation, which is specified by gufi in the request
      responses:
        "200":
          description: >-
            Acknowledge that request was received. This does not guarantee that the Operation was successfully updated in the ESS network.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponseWithConflicts"
        "400":
          description: Invalid Request was received.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "404":
          description: The Operation for the gufi is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOperationParameters"
        description: Operational Plan
        required: true

  "/operations/{gufi}":
    get:
      tags:
        - Operations
      summary: Retrieve an Operation by GUFI.
      description: Retrieve an Operation by GUFI.  Returns a 404 if GUFI is not found.
      security:
        - Authority:
          - operations.non-sensitive.read
      parameters:
        - in: path
          name: gufi
          required: true
          description: GUFI of the Operation being requested.
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
        "400":
          description: Invalid Request was received.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "404":
          description: The Operation for the GUFI is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"

  "/conflicts/query":
    post:
      tags:
        - Conflicts
      summary: Submit a query to find any Operations or Constraints that overlap/conflict with some specified 4D volumes.
      security:
        - Authority:
          - operations.non-sensitive.read
      description: >-
        Look at the passed-in volume(s), and determine if there are any Operations or Constraints that have conflicting/overlapping volumes. Return the entire Operation and Constraint info, not just the intersecting parts.
      responses:
        "201":
          description: >-
            Acknowledge that request was received. Return Operations and Constraints with conflicting/overlapping operational intents, if any.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponseWithConflicts"
        "400":
          description: Invalid Request was received.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
      requestBody:
        description: >-
          4D Volumes to check for conflict/overlap (TODO: Clarify whether this means checking against BOTH self-owned and DSS-provided ops, or only self-owned.)
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConflictCheckParameters"
        required: true

  "/constraints":
    post:
      tags:
        - Constraints for elevated privileges
      summary: Submit a Constraint Request to NUP
      description: >-
        Submit a Constraint Request. NUP shall attempt to submit the Constraint to the ESS network.
        If the requestBody doesn't contain an id, a random id shall be assigned to the Operation.
        If the requestBody contains a non-existing id, then the supplied id will be
        used for the new operation.
      security:
        - Authority:
          - uvr.non-sensitive.write
      operationId: postConstraint
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProposeConstraintParameters"
        description: The intended Constraint
        required: true
      responses:
        "201":
          description: >-
            Acknowledge that Constraint Request was received. This does not guarantee that the Constraint was successfully added to the ESS network.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "400":
          description: Invalid Constraint Request was received.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
    put:
      tags:
        - Constraints for elevated privileges
      summary: Update a Constraint
      description: >-
        Update an existing constraint, which is specified by id in the request
      security:
        - Authority:
          - uvr.non-sensitive.write
      operationId: putConstraint
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateConstraintParameters"
        description: The intended Constraint
        required: true
      responses:
        "200":
          description: >-
            Acknowledge that Constraint Request was received. This does not guarantee that the Constraint was successfully updated in the ESS network.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "400":
          description: Invalid Constraint Request was received.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "404":
          description: The Constraint for the id is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"

  "/constraints/{id}":
    get:
      tags:
        - Constraints for elevated privileges
      summary: Get a Constraint by ID
      description: Get a Constraints by ID
      security:
        - Authority:
          - uvr.non-sensitive.read
      operationId: getConstraintById
      parameters:
        - name: id
          in: path
          description: ID of the Constraints that needs to be fetched
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested Constraint
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Constraint"
        "400":
          description: Invalid Request was received.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "404":
          description: The Constraint for the id is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "500":
          description: Error related to being unable to retrieve the Constraint from the ESS network
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
    delete:
      tags:
        - Constraints for elevated privileges
      summary: Delete a Constraint by ID
      description: Delete a Constraint by ID
      security:
        - Authority:
          - uvr.non-sensitive.write
      operationId: deleteConstraintById
      parameters:
        - name: id
          in: path
          description: ID of the Constraint that needs to be deleted
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description:
            Acknowledge that a delete Constraint Request was received. This does not guarantee that the Constraint was deleted from the ESS network.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "400":
          description: Invalid Request was received.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "404":
          description: The Constraint for the id is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "500":
          description: Error related to being unable to retrieve the Constraint from the ESS network
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"

  "/positions":
    post:
      tags:
        - Positions
      summary: Submit a Position to NUP
      description: >-
        Submit a Position to NUP.
      security:
        - Authority:
          - operations.non-sensitive.write
      operationId: postPosition
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Position"
        description: The intended Position
        required: true
      responses:
        "201":
          description: >-
            Acknowledge that Position was received
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "400":
          description: Invalid Request was received.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"
        "404":
          description: The Operation for the GUFI is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatorResponse"

servers:
  - url: "https://some.host/ess/operator"

components:
  securitySchemes:
    Authority:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://some.host/fimsAuthServer/oauth/token
          scopes:
            operations.non-sensitive.read: Allow read of non-sensitive operations
            operations.non-sensitive.write: Allow write of non-sensitive operations
            uvr.non-sensitive.read: Allow read of non-sensitive airspace constraints
            uvr.non-sensitive.write: Allow write of non-sensitive airspace constraints
      description: |-
        Authorization from, or on behalf of, an authorization authority.  This authority shall issue access tokens that are JSON Web Tokens as defined in RFC 7519, using the `RS256` algorithm for the signature, publish to all providers the public key for verifying that signature, and implement standard OAuth server discovery mechanisms as described in RFC 8414.

        The following fields shall be included in the JWT claim for access tokens issued by this authority:
            * `iss`, with the URL at which the token generation request was received.
            * `exp`, with a time no further than 1 hour in the future.
            * `sub`, with unique ID of the client requesting the access token.
            * `scope`, with an array of strings indicating the scopes granted.
            * `jti`, according to RFC 7519.

        Clients shall provide these access tokens in an `Authorization` header in the form `Bearer <token>` in accordance with RFC 6750.

  schemas:
    Operation:
      required:
        - volumes
      type: object
      properties:
        gufi:
          type: string
          format: uuid
          example: 00000000-0000-4444-8888-feeddeadbeef
        ess_name:
          type: string
          description: ESS name that owns the operation.
        update_time:
          description: >-
            A timestamp set by the ESS any time the state of the operation is
            updated within the ESS Network.
          allOf:
            - $ref: "#/components/schemas/Time"
        state:
          type: string
          description: |-
            The current state of the operation.
            0. Proposed
              This operation is not yet ACCEPTED.  It may be awaiting information, it may be in conflict with another ACCEPTED or
              ACTIVATED operation and undergoing a deconflict process, or for
              some other reason it is not yet able to be declared ACCEPTED.
            1. Accepted
              This Operation was fully deconflicted from other Entities at the time it
              changed to this state, but no aircraft associated with it are active yet.
            2. Activated
              One or more aircraft associated with this Operation are, or will imminently
              be, in flight.
            3. UpdateProposed
              This operation is being updated and is not yet complete.  Once the update is complete, the operation will return back to the previous state.
            4. Closed
              This Operation has closed (due to either an Operator-induced change or flight
              completion).
            5. NonConforming
              This Operation is outside of the planned volume.
            6. Contingent
              This Operation is executing a contingency action, either because it has been
              NonConforming for a certain period of time, or because of operator initiation.
              This state must transition to Ended.
          enum:
            - Proposed
            - Accepted
            - Activated
            - UpdateProposed
            - Closed
            - NonConforming
            - Contingent
        version:
          description: the version number of the operation
          type: integer
          format: int32
        vehicle_maker:
          $ref: "#/components/schemas/VehicleMaker"
        vehicle_model:
          $ref: "#/components/schemas/VehicleModel"
        aircraft_registration:
          $ref: '#/components/schemas/AircraftRegistration'
        operator:
          $ref: '#/components/schemas/Operator'
        mission_type:
          $ref: "#/components/schemas/MissionType"
        mission_description:
          $ref: "#/components/schemas/MissionDescription"
        contingency_handling_description:
          $ref: '#/components/schemas/ContingencyHandlingDescription'
        common_operating_procedures:
          $ref: '#/components/schemas/CommonOperatingProcedure'
        negotiated_operators:
          $ref: '#/components/schemas/NegotiatedOperators'
        regular_updates:
          $ref: '#/components/schemas/RegularUpdate'
        volumes:
          description: >-
            Volumes that wholly contain the operational intent while being within
            an externally defined convention for maximum size. Once this size is
            reached the confidence value for the OperationalIntentVolume4D should
            decrease rather than the volume size increasing.

            Start and end times, as well as lower and upper altitudes, are
            required for each volume. The end time may not be in the past.
          maxItems: 250
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/OperationalIntentVolume4D"
        wind_source:
          $ref: '#/components/schemas/WindSource'
        flight_plan:
          $ref: '#/components/schemas/FlightPlan'
        comments:
          maxLength: 1000
          type: string
          description:
            Informative text about the aircraft. Not used by the ETM System.
            Only for human stakeholders.
          default: NOT PROVIDED
        sensitivity_type:
          $ref: "#/components/schemas/SensitivityType"

    Operator:
      description: >-
        The information about an operator, including the name, email, and telephone number.
      type: object
      properties:
        user_id:
          type: string
          description: Operator user id, if available.
        name:
          type: string
          maxLength: 256
        email:
          type: string
          format: email
        phone_number:
          type: string
          format: phone_number

    VehicleMaker:
      description: The name of the manufacturer of the vehicle.
      type: string
      maxLength: 256

    VehicleModel:
      description: The name of the model of the vehicle.
      type: string
      maxLength: 256

    AircraftRegistration:
      type: string
      pattern: "[A-Z0-9]{1,7}"
      description: |
        A unique, alphanumeric string that identifies a civil aircraft and consists of the Aircraft
        Nationality or Common Mark and an additional alphanumeric string, the registration mark,
        assigned by the state of registry or common mark registering authority. [FIXM]
      minLength: 1
      maxLength: 7
      externalDocs:
        description: See FIXM 4.2.0 for further information.
        url: https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_AircraftRegistrationType.html#LinkBC

    MissionType:
       description: >-
         Designation of mission type, whether public or private. Default to PUBLIC.
       type: string
       enum:
       - PUBLIC
       - PRIVATE
       default: PUBLIC

    MissionDescription:
      description: >-
        Description of the mission, e.g. describing the mission, such as fly to the Gulf of Mexico and loiter for 6 months providing a service.
      type: string
      maxLength: 1000

    ContingencyHandlingDescription:
      description: Description of the contigency handling procedures.
      type: string
      maxLength: 10000
  
    CommonOperatingProcedure:
      description: >-
        Common operating procedure, string values denote a specific type of rules by which the operation will interact with other operations by default. Does not preclude operator-operator negotiation or agreements.
        COP1_FIRST_RESERVED - De-confliction through first-reserved-first-served principle
        COP2_PREDEFINED_AGREEMENT - De-confliction through pre-defined agreement
        COP3_DYNAMIC_AGREEMENT - De-confliction through dynamically generated/negotiated agreement
      type: string
      enum:
      - COP1_FIRST_RESERVED
      - COP2_PREDEFINED_AGREEMENT
      - COP3_DYNAMIC_AGREEMENT
      default: COP1_FIRST_RESERVED

    RegularUpdate:
      type: boolean
      description: >-
        True or false descriptor for whether or not there is an expectation that the operational intent for this operation will be regularlary updated.
      default: false

    NegotiatedOperators:
      description: >-
       List of other operators that the operator of this operation has agreements with, for the purposes of negotiation outside of the common operating procedures.
      type: array
      maxItems: 1024
      items:
        type: string
        maxLength: 256

    FlightPlan:
      description: >- 
        Detailed flight plan that will inform the operational intent generator, which has been built for developing operation intent based on detailed flight plan, flight mode, and certain level of wind information. The Flight Plan model is not shared in the operational intent details, but is instead available through a separate endpoint in the event that conflict is determined to be outside of the acceptable risk tolerance and additional information exchanges need to occur for further operator negotiation.
      type: object
      properties:
        flight_plan_waypoint_array:
          $ref: '#/components/schemas/FlightPlanWayPointArray'
        trajectory_performance:
          $ref: '#/components/schemas/TrajectoryPerformance'

    FlightPlanWayPointArray:
      type: array
      minItems: 2
      maxItems: 1000
      description: |-
        The list of flight waypoints and associated flight modes for this operation. This list must contain all significant flight waypoints. 
      items:
        $ref: '#/components/schemas/FlightPlanWayPoint'

    FlightPlanWayPoint:
      description: >-
        A waypoint and associate mode for use within a flight plan.
      required:
        - lat_lng_point
        - altitude
        - true_air_speed
        - flight_mode
        - controlled_arrival_time_tolerance
      type: object
      properties:
        point_designator:
          description: The name of the designated point.
            This is required for all named airspace structure points.
          type: string
          example: ee123
        lat_lng_point:
          description: Latitude and Longitude of the point. If this is for a named airspace structure 
            point it should be the same value as the specific airspace structure point.
          allOf:
            - $ref: '#/components/schemas/LatLngPoint'
        altitude:
          description: |-
            Altitude of the point. If this is for a named airspace structure point, it should be the same value as from specific airspace structure point.
          allOf:
            - $ref: '#/components/schemas/Altitude'  
        true_air_speed:
          description: |-
            Speed of the vehicle from current waypoint to next waypoint in the flight plan.
          allOf:
            - $ref: '#/components/schemas/TrueAirSpeed'
        flight_mode:
          description: |-
            Provides the flight mode between current waypoint to next waypoint
          type: object
          required:
          - lateral_mode
          - vertical_mode
          properties:
            lateral_mode:
              type: string
              enum:
              - CONSTANT_VELOCITY
              - CONSTANT_ACCELERATION
              - CONSTANT_TURN
              - STATION_KEEPING
            vertical_mode:
              type: string
              enum:
              - CONSTANT_CLIMB_DESCENT
              - CONSTANT_ALTITUDE
        controlled_time_of_arrival_tolerance:
          description: |-
            Provides controlled arrival time tolerance in minutes at the associated waypoint
          allOf:
           - $ref: '#/components/schemas/ControlledTimeOfArrivalTolerance'

    TrajectoryPerformance:
      description: Describes any applicable trajectory performance that can be used to build trajectory uncertainty.
      type: object
      required:
        - along_track_error_rms
        - cross_track_error_rms
        - vertical_track_error_rms
      properties:
        along_track_error_rms:
          description: |
            Provides root-mean-square for flight's along-track error, including the constant (zeroth order) and rate (first order)
          allOf:
           - $ref: '#/components/schemas/TrackingErrorRMS'
        cross_track_error_rms:
          description: |
            Provides root-mean-square for flight's cross-track error, including the constant (zeroth order) and rate (first order)
          allOf:
           - $ref: '#/components/schemas/TrackingErrorRMS'
        vertical_track_error_rms:
          description: |
            Provides root-mean-square for flight's vertical-track error, including the constant (zeroth order) and rate (first order)
          allOf:
           - $ref: '#/components/schemas/TrackingErrorRMS'

    TrueAirSpeed:
      required:
      - speed
      - units_speed
      type: object
      properties:
        speed:
          format: float
          type: number
          multipleOf: 0.01
          minimum: 0.0
          exclusiveMinimum: false
          description: Ground speed in meters/second.
          example: 200.1
        units_speed:
          type: string
          enum:
          - Knots

    ControlledTimeOfArrivalTolerance:
      required:
      - status 
      - value
      - units
      type: object
      properties:
        status:
          type: string
          enum:
          - ACTIVATED
          - INACTIVATED
        value:
          format: float
          type: number
          multipleOf: 0.1
          minimum: 0.0
          exclusiveMinimum: false
          description: Tolerance for controlled time of arrival at a waypoint
          example: 10.0
        units:
          type: string
          enum:
          - Minutes

    TrackingErrorRMS:
      required:
      - status
      - constant 
      - growth_rate
      type: object
      properties:
        status:
          type: string
          enum:
          - ACTIVATED
          - INACTIVATED
        constant:
          format: float
          type: number
          multipleOf: 0.01
          minimum: 0.00
          exclusiveMinimum: false
          description: the constant portion of the root-mean-square error for the tracking error at a given direction
          example: 1.00
        growth_rate:
          format: float
          type: number
          multipleOf: 0.01
          minimum: 0.00
          exclusiveMinimum: false
          description: the rate portion of the root-mean-square error for the tracking error at a given direction
          example: 1.00

    WindSource:
      description: Source of wind data used for trajectory forecasting
      type: string
      enum:
        - GFS
        - Other

    ConflictCheckParameters:
      required:
        - volumes
      type: object
      properties:
        volumes:
          description: >-
            The actual geographical and time information for the operation.
            For each operation volume, the properties of time_start and time_end are required.
          maxItems: 250
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/Volume4D"
        include_intersections:
          description: >-
            Whether to also include the intersecting portions of any conflicting/overlapping operations (but not constraints).
          type: boolean

    ProposeOperationParameters:
      required:
        - vehicle_maker
        - vehicle_model
        - aircraft_registration
        - operator
        - mission_type
        - mission_description
        - contingency_handling_description
        - common_operating_procedures
        - negotiated_operators
        - volumes
      type: object
      properties:
        gufi:
          type: string
          format: uuid
          example: 00000000-0000-4444-8888-feeddeadbeef
        vehicle_maker:
          $ref: "#/components/schemas/VehicleMaker"
        vehicle_model:
          $ref: "#/components/schemas/VehicleModel"
        aircraft_registration:
          $ref: '#/components/schemas/AircraftRegistration'
        operator:
          $ref: '#/components/schemas/Operator'
        mission_type:
          $ref: "#/components/schemas/MissionType"
        mission_description:
          $ref: "#/components/schemas/MissionDescription"
        contingency_handling_description:
          $ref: '#/components/schemas/ContingencyHandlingDescription'
        common_operating_procedures:
          $ref: '#/components/schemas/CommonOperatingProcedure'
        negotiated_operators:
          $ref: '#/components/schemas/NegotiatedOperators'
        regular_updates:
          $ref: '#/components/schemas/RegularUpdate'
        volumes:
          description: >-
            Volumes that wholly contain the operational intent while being within
            an externally defined convention for maximum size. Once this size is
            reached the confidence value for the OperationalIntentVolume4D should
            decrease rather than the volume size increasing.

            Start and end times, as well as lower and upper altitudes, are
            required for each volume. The end time may not be in the past.
          maxItems: 250
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/OperationalIntentVolume4D"
        wind_source:
          $ref: '#/components/schemas/WindSource'
        flight_plan:
          $ref: '#/components/schemas/FlightPlan'
        comments:
          maxLength: 1000
          type: string
          description:
            Informative text about the aircraft. Not used by the ETM System.
            Only for human stakeholders.
          default: NOT PROVIDED
        sensitivity_type:
          $ref: "#/components/schemas/SensitivityType"

    UpdateOperationParameters:
      description: >-
        Forked from /components/schemas/ProposeOperationParameter.
        Modifications Include:
        - Make gufi required
      required:
        - gufi
        - vehicle_maker
        - vehicle_model
        - aircraft_registration
        - operator
        - mission_type
        - mission_description
        - contingency_handling_description
        - common_operating_procedures
        - negotiated_operators
        - volumes
      type: object
      properties:
        gufi:
          type: string
          format: uuid
          example: 00000000-0000-4444-8888-feeddeadbeef
        vehicle_maker:
          $ref: "#/components/schemas/VehicleMaker"
        vehicle_model:
          $ref: "#/components/schemas/VehicleModel"
        aircraft_registration:
          $ref: '#/components/schemas/AircraftRegistration'
        operator:
          $ref: '#/components/schemas/Operator'
        mission_type:
          $ref: "#/components/schemas/MissionType"
        mission_description:
          $ref: "#/components/schemas/MissionDescription"
        contingency_handling_description:
          $ref: '#/components/schemas/ContingencyHandlingDescription'
        common_operating_procedures:
          $ref: '#/components/schemas/CommonOperatingProcedure'
        negotiated_operators:
          $ref: '#/components/schemas/NegotiatedOperators'
        regular_updates:
          $ref: '#/components/schemas/RegularUpdate'
        volumes:
          description: >-
            Volumes that wholly contain the operational intent while being within
            an externally defined convention for maximum size. Once this size is
            reached the confidence value for the OperationalIntentVolume4D should
            decrease rather than the volume size increasing.

            Start and end times, as well as lower and upper altitudes, are
            required for each volume. The end time may not be in the past.
          maxItems: 250
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/OperationalIntentVolume4D"
        wind_source:
          $ref: '#/components/schemas/WindSource'
        flight_plan:
          $ref: '#/components/schemas/FlightPlan'
        comments:
          maxLength: 1000
          type: string
          description:
            Informative text about the aircraft. Not used by the ETM System.
            Only for human stakeholders.
          default: NOT PROVIDED
        sensitivity_type:
          $ref: "#/components/schemas/SensitivityType"

    ConflictingOperation:
      description: >-
        Minimum necessary info to be returned for operations that conflict or overlap with another operation or operational area.
      type: object
      properties:
        gufi:
          type: string
          format: uuid
          example: 00000000-0000-4444-8888-feeddeadbeef
        vehicle_maker:
          $ref: "#/components/schemas/VehicleMaker"
        vehicle_model:
          $ref: "#/components/schemas/VehicleModel"
        aircraft_registration:
          $ref: '#/components/schemas/AircraftRegistration'
        operator:
          $ref: '#/components/schemas/Operator'
        mission_type:
          $ref: "#/components/schemas/MissionType"
        mission_description:
          $ref: "#/components/schemas/MissionDescription"
        contingency_handling_description:
          $ref: '#/components/schemas/ContingencyHandlingDescription'
        common_operating_procedures:
          $ref: '#/components/schemas/CommonOperatingProcedure'
        volumes:
          description: >-
            Volumes that wholly contain the operational intent while being within
            an externally defined convention for maximum size. Once this size is
            reached the confidence value for the OperationalIntentVolume4D should
            decrease rather than the volume size increasing.

            Start and end times, as well as lower and upper altitudes, are
            required for each volume. The end time may not be in the past.
          maxItems: 250
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/OperationalIntentVolume4D"
        wind_source:
          $ref: '#/components/schemas/WindSource'
        comments:
          maxLength: 1000
          type: string
          description:
            Informative text about the aircraft. Not used by the ETM System.
            Only for human stakeholders.
          default: NOT PROVIDED

    Message:
      description: >-
        An ETM operator message. Used to make other stakeholders aware about an issue.
      type: object
      required:
        - message_type
      properties:
        message_id:
          type: string
          format: uuid
        gufi:
          type: string
          format: uuid
          example: 00000000-0000-4444-8888-FEEDDEADBEEF
          description: The GUFI for the operation referenced in this message.  UUIDv4.
        origin:
          type: string
          description: >-
            CLIENT: Message is from an ETM Client to the ETM System.
            ETM: Message was automatically generated by the ETM System.
            UTM: Message is from a UTM Client to the ETM System.
          enum:
            - CLIENT
            - ETM
            - UTM
        time_sent:
          $ref: "#/components/schemas/Time"
        message_type:
          type: string
          description: |-
            1. INFORM_OPERATION_ACCEPTED
              This operation was in Proposed state and has transitioned to the Accepted state.
            2. INFORM_OPERATION_REJECTED
              This operation was in Proposed state and has been rejected and transitioned to the Closed state due to reasons such as intersecting existing operations.
            3. INFORM_OPERATION_ACTIVATE_SUCCESS
              This operation activation request has completed successfully.  The operation state is changed to Activated. 
            4. INFORM_OPERATION_ACTIVATE_FAIL
              This operation activation request has failed to complete. The operation state is not changed.
            5. INFORM_OPERATION_CLOSE_SUCCESS
              This operation close request has completed successfully.
            6. INFORM_OPERATION_CLOSE_FAIL
              This operation close request has failed to complete.  The operation state is not changed.
            7. INFORM_OPERATION_CONTINGENCY_SUCCESS
              This operation contingency request has completed successfully.  The operation state is changed to the contingent state.
            8. INFORM_OPERATION_CONTINGENCY_FAIL
              This operation contingency request has failed to complete.  The operation state is not changed.
            9. INFORM_OPERATION_UPDATE_SUCCESS
              This operation update request has completed successfully.
            10. INFORM_OPERATION_UPDATE_FAIL
              This operation update request has failed to complete.
            11. INFORM_CONSTRAINT_CREATE_SUCCESS
              This constraint create request has completed successfully.
            12. INFORM_CONSTRAINT_CREATE_FAIL
              This constraint create request has failed to complete.
            13. INFORM_CONSTRAINT_UPDATE_SUCCESS
              This constraint update request has completed successfully.
            14. INFORM_CONSTRAINT_UPDATE_FAIL
              This constraint update request has failed to complete.
            15. INFORM_CONSTRAINT_DELETE_SUCCESS
              This constraint delete request has completed successfully.
            16. INFORM_CONSTRAINT_DELETE_FAIL
              This constraint delete request has failed to complete.
            17. INTENT_OPERATION_ALL_CLEAR
              This operation was in Accepted state and wants to transition to Activated state.
            18. INTENT_OPERATION_CONTINGENCY
              This message requests ESS to change the operation to Contingent state.
            19. INTENT_OPERATION_CLOSE
              The operator wants to close this operation.  This will move the operation to Closed state.
            20. ALERT_OPERATION_NONCONFORMING
              The ESS uses this message to alert the operator that the operation position is not conformed to the planned volumes.
            21. ALERT_OPERATION_CONFORMING
              The ESS uses this message to alert the operator that the operation position is back to be conformed to the planned volumes.
            22. ALERT_OPERATION_CONTINGENT
              The ESS uses this message to alert the operator that the operation position is in contingent state.
            23. ALERT_OPERATION_REPLAN
              The ESS requests the operator to replan the operation.  The reason could be either A) that ESS received a constraint update from another ESS or B) an update of contingent operation from another ESS that overlaps with the operation, see reason field for the discription.  The operator is required to replan the operation to avoid the conflict.
          enum:
            - INFORM_OPERATION_ACCEPTED
            - INFORM_OPERATION_REJECTED
            - INFORM_OPERATION_ACTIVATE_SUCCESS
            - INFORM_OPERATION_ACTIVATE_FAIL
            - INFORM_OPERATION_CLOSE_SUCCESS
            - INFORM_OPERATION_CLOSE_FAIL
            - INFORM_OPERATION_CONTINGENCY_SUCCESS
            - INFORM_OPERATION_CONTINGENCY_FAIL
            - INFORM_OPERATION_UPDATE_SUCCESS
            - INFORM_OPERATION_UPDATE_FAIL
            - INFORM_CONSTRAINT_CREATE_SUCCESS
            - INFORM_CONSTRAINT_CREATE_FAIL
            - INFORM_CONSTRAINT_UPDATE_SUCCESS
            - INFORM_CONSTRAINT_UPDATE_FAIL
            - INFORM_CONSTRAINT_DELETE_SUCCESS
            - INFORM_CONSTRAINT_DELETE_FAIL
            - INTENT_OPERATION_ALL_CLEAR
            - INTENT_OPERATION_CONTINGENCY
            - INTENT_OPERATION_CLOSE
            - ALERT_OPERATION_NONCONFORMING
            - ALERT_OPERATION_CONFORMING
            - ALERT_OPERATION_CONTINGENT
            - ALERT_OPERATION_REPLAN
        reason:
          type: string
        violations:
          type: array
          description: >-
            Included with messages of INFORM_OPERATION_REJECTED or INFORM_OPERATION_UPDATE_FAIL.
            The violation type refers to the constriant type of violation, e.g. OPERATION
            or CONSTRANIT.  The constraining_id is the UUID associated with each constraint;
            When applicable, violating_volumes indicates the ordinals of volumes that are in
            violation. This allows for querying ETM for more information details.
          items:
            $ref: "#/components/schemas/Violation"
        free_text:
          type: string
          description: >-
            Any additional information. Note that this is for human consumption.
            All time critical elements should be captured in the other data
            fields for easier consumption by other automated systems.
          maxLength: 1000
        request_id:
          type: string
          description: only set to match the request_id in the initial operator request
      example:
        message_id: 00000000-0000-4444-8888-CAFEBEEFF00D
        time_sent: "2015-08-20T14:11:57.345Z"
        message_type: INFORM_OPERATION_CLOSED
        gufi: 00000000-0000-4444-8888-FEEDDEADBEEF
        free_text: "Cool flight, bro"

    Violation:
      type: object
      required:
        - type
      properties:
        constraining_id:
          type: string
          description: Unique identifier for this constraint.
        errorMessage:
          type: string
          description: >-
            A report that a problem occurred thus Violation could not be
            resolved.
        type:
          type: string
          description: >-
            The violation type, e.g. OPERATION (constraint is an existing
            flight)
        violating_volumes:
          type: array
          description: >-
            The ordinal of the volumes that are violating this constraint, eg, the
            proposed flight's second volume violated this constraint
          items:
            type: integer
            format: int32

    ProposeConstraintParameters:
      description: >-
        Operator Constraint Model
      required:
        - volumes
      type: object
      properties:
        id:
          $ref: >-
            https://raw.githubusercontent.com/astm-utm/Protocol/implementation_2020q2/utm.yaml#/components/schemas/EntityUUID
        volumes:
          description: Volumes that wholly contain the Constraint while being as small as practical.
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/Volume4D"
        type:
          $ref: >-
            https://raw.githubusercontent.com/astm-utm/Protocol/implementation_2020q2/utm.yaml#/components/schemas/ConstraintDetails/properties/type

      externalDocs:
        url: https://raw.githubusercontent.com/astm-utm/Protocol/implementation_2020q2/utm.yaml

    UpdateConstraintParameters:
      description: >-
        Operator Constraint Model
      required:
        - id
        - volumes
      type: object
      properties:
        id:
          $ref: >-
            https://raw.githubusercontent.com/astm-utm/Protocol/implementation_2020q2/utm.yaml#/components/schemas/EntityUUID
        volumes:
          description: Volumes that wholly contain the Constraint while being as small as practical.
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/Volume4D"
        type:
          $ref: >-
            https://raw.githubusercontent.com/astm-utm/Protocol/implementation_2020q2/utm.yaml#/components/schemas/ConstraintDetails/properties/type

      externalDocs:
        url: https://raw.githubusercontent.com/astm-utm/Protocol/implementation_2020q2/utm.yaml

    Constraint:
      description: >-
        Operator Constraint Model
      required:
        - id
        - volumes
      type: object
      properties:
        id:
          $ref: >-
            https://raw.githubusercontent.com/astm-utm/Protocol/implementation_2020q2/utm.yaml#/components/schemas/EntityUUID
        volumes:
          description: Volumes that wholly contain the Constraint while being as small as practical.
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/Volume4D"
        type:
          $ref: >-
            https://raw.githubusercontent.com/astm-utm/Protocol/implementation_2020q2/utm.yaml#/components/schemas/ConstraintDetails/properties/type

    Time:
      description: Forked from ASTM /components/schemas/Time.
      required:
        - value
        - format
      type: object
      properties:
        value:
          type: string
          description: RFC3339-formatted time/date string.  The time zone must be 'Z'.
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        format:
          type: string
          enum:
            - RFC3339

    Radius:
      description: Forked from ASTM /components/schemas/Radius.
      required:
        - value
        - units
      type: object
      properties:
        value:
          format: float
          description: Distance from the centerpoint of a circular/elliptical area, along the WGS84 ellipsoid.
          type: number
          example: 300.183
        units:
          type: string
          description: FIXM-compatible units. Only meters ("M") are acceptable for ETM.
          enum:
            - M

    Angle:
      required:
        - value
        - units
      type: object
      properties:
        value:
          description: The magnitude of the angle.
          format: float
          type: number
        units:
          description: The units being used to measure the angle.
          type: string
          enum:
            - DEG
            - RAD

    Altitude:
      description: Forked from ASTM /components/schemas/Altitude.
      type: object
      required:
        - value
        - reference
        - units
      properties:
        value:
          description: |-
            The numeric value of the altitude. Note that min and max values are
            added as a sanity check. As use cases evolve and more options are
            made available in terms of units of measure or reference systems,
            these bounds should be re-evaluated.
          type: number
          format: double
          minimum: -8000
          exclusiveMinimum: false
          maximum: 100000
          exclusiveMaximum: false
        reference:
          description: |-
            A code indicating the reference for a vertical distance. See AIXM 5.1
            and FIXM 4.2.0. Currently, ETM only allows WGS84 with no immediate
            plans to allow other options. FIXM and AIXM allow for 'SFC' which is
            equivalent to AGL.
          type: string
          enum:
            - W84
        units:
          description: |-
            The reference quantities used to express the value of altitude. See
            FIXM 4.2. Currently, ETM only allows meters with no immediate plans
            to allow other options.
          type: string
          enum:
            - M

    Latitude:
      description: Degrees of latitude north of the equator, with reference to the WGS84 ellipsoid.

        Forked from ASTM /components/schemas/Latitude.
      maximum: 90
      exclusiveMaximum: false
      minimum: -90
      exclusiveMinimum: false
      type: number
      format: double
      example: 34.123

    Longitude:
      description: Degrees of longitude east of the Prime Meridian, with reference to the WGS84 ellipsoid.

        Forked from ASTM /components/schemas/Longitude.
      minimum: -180
      exclusiveMaximum: false
      maximum: 180
      exclusiveMinimum: false
      type: number
      format: double
      example: -118.456

    Polygon:
      description: |-
        An enclosed area on the earth.
        The bounding edges of this polygon shall be the shortest paths between connected vertices.  This means, for instance, that the edge between two points both defined at a particular latitude is not generally contained at that latitude.
        The winding order shall be interpreted as the order which produces the smaller area.
        The path between two vertices shall be the shortest possible path between those vertices.
        Edges may not cross.
        Vertices may not be duplicated.  In particular, the final polygon vertex shall not be identical to the first vertex.

        Forked from ASTM /components/schemas/Polygon.
      required:
        - vertices
      type: object
      properties:
        vertices:
          minItems: 3
          type: array
          items:
            $ref: '#/components/schemas/LatLngPoint'

    LatLngPoint:
      description: Point on the earth's surface.
      required:
        - lat
        - lng
      type: object
      properties:
        lng:
          $ref: '#/components/schemas/Longitude'
        lat:
          $ref: '#/components/schemas/Latitude'

    Circle:
      description: |-
        A circular area on the surface of the earth.

        Forked from ASTM /components/schemas/Circle.
      type: object
      properties:
        center:
          $ref: '#/components/schemas/LatLngPoint'
        radius:
          $ref: '#/components/schemas/Radius'

    Ellipse:
      description: |-
        An elliptical area on the surface of the earth.
      type: object
      properties:
        center:
          $ref: '#/components/schemas/LatLngPoint'
        semi-major_axis:
          $ref: '#/components/schemas/Radius'
        semi-minor_axis:
          $ref: '#/components/schemas/Radius'
        axis_rotation:
          description: The counter-clockwise rotation of the semi-major axis, relative to the x-axis.
          allOf:
            - $ref: '#/components/schemas/Angle'

    Volume3D:
      description: |-
        A three-dimensional geographic volume consisting of a vertically-extruded shape.  Exactly one of
        `outline_polygon` or `outline_circle` must be specified.

        Forked from ASTM /components/schemas/Volume3D.

        Modifications Include:
          - Add possible outline shape of ellipse.
      required:
        - altitude_lower
        - altitude_upper
      type: object
      properties:
        outline_circle:
          description: A circular geographic shape on the surface of the earth.
          allOf:
            - $ref: '#/components/schemas/Circle'
        outline_polygon:
          description: A polygonal geographic shape on the surface of the earth.
          allOf:
            - $ref: '#/components/schemas/Polygon'
        outline_ellipse:
          description: An elliptical geographic shape on the surface of the earth.
          allOf:
            - $ref: '#/components/schemas/Ellipse'
        altitude_lower:
          description: Minimum bounding altitude of this volume.
          allOf:
            - $ref: '#/components/schemas/Altitude'
        altitude_upper:
          description: Maximum bounding altitude of this volume.
          allOf:
            - $ref: '#/components/schemas/Altitude'

    Position:
      description: >-
        Forked from ASTM /components/schemas/VehicleTelemetry

        Modifications Include:
        - Add enroute_positions_id
      required:
        - enroute_positions_id
        - gufi
        - position
        - velocity
        - time_measured
      type: object
      properties:
        enroute_positions_id:
          type: string
          format: uuid
        gufi:
          $ref: >-
            https://raw.githubusercontent.com/astm-utm/Protocol/implementation_2020q2/utm.yaml#/components/schemas/EntityUUID
        position:
          $ref: >-
            https://raw.githubusercontent.com/astm-utm/Protocol/implementation_2020q2/utm.yaml#/components/schemas/Position
        velocity:
          $ref: >-
            https://raw.githubusercontent.com/astm-utm/Protocol/implementation_2020q2/utm.yaml#/components/schemas/Velocity
        time_measured:
          $ref: '#/components/schemas/Time'
      externalDocs:
        url: https://raw.githubusercontent.com/astm-utm/Protocol/implementation_2020q2/utm.yaml

    Volume4D:
      description: >-
        Contiguous block of geographic spacetime.

        Forked from ASTM /components/schemas/Volume4D.

        Modifications Include:
        - Make time_start and time_end required
        - Add 
      required:
        - volume3D
        - time_start
        - time_end
      type: object
      properties:
        volume3D:
          $ref: '#/components/schemas/Volume3D'
        time_start:
          $ref: '#/components/schemas/Time'
        time_end:
          $ref: '#/components/schemas/Time'
        containment_confidence:
          $ref: '#/components/schemas/ContainmentConfidenceLevel'
        confidence_distribution:
          description: Containment confidence probability distribution type
          type: string
          enum:
          - Uniform
          - Normal

    OperationalIntentVolume4D:
      type: object
      description: >-
        Four dimensional volume used for communicating operational intent. This volume includes a containment confidence level to communicate to other operators the likelihood of being inside of a designated volume in order to avoid high-uncertainty vehicles having volumes larger than acceptable by the current design.
      required:
        - volume4D
      properties:
        volume4D:
          $ref: '#/components/schemas/Volume4D'
        containtment_confidence_level:
          $ref: '#/components/schemas/ContainmentConfidenceLevel'

    ContainmentConfidenceLevel:
      description: >-
        A confidence value between 0.0 - 1.0 that expresses the likelihood that a vehicle will be within a volume.
      type: number
      format: float
      minimum: 0.0
      maximum: 1.0

    OperatorResponse:
      type: object
      properties:
        status_code:
          description: the status code of the response
          type: integer
          format: int32
        msg:
          type: string
        entity_id:
          type: string
          format: uuid
        request_id:
          type: string

    OperatorResponseWithConflicts:
      type: object
      properties:
        status_code:
          description: the status code of the response
          type: integer
          format: int32
        msg:
          type: string
        entity_id:
          type: string
          format: uuid
        request_id:
          type: string
        conflicting_operations:
          type: array
          items:
            $ref: '#/components/schemas/ConflictingOperation'
        intersecting_operations:
          type: array
          items:
            $ref: '#/components/schemas/ConflictingOperation'
        conflicting_constraints:
          type: array
          items:
            $ref: '#/components/schemas/Constraint'

    SensitivityType:
      description: >-
        Sensitivity of the operation
      type: string
      enum:
        - 'non-sensitive'
        - 'sensitive'
        - 'sensitive-protected'
      default: 'non-sensitive'
